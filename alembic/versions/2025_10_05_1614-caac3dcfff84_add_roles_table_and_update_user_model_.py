"""Add roles table and update user model with role_id

Revision ID: caac3dcfff84
Revises: 
Create Date: 2025-10-05 16:14:58.116786

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'caac3dcfff84'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Step 1: Add role_id column as nullable first
    op.add_column('users', sa.Column('role_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_users_role_id'), 'users', ['role_id'], unique=False)
    op.create_foreign_key('fk_users_role_id', 'users', 'roles', ['role_id'], ['id'])
    
    # Step 2: Migrate existing data - map old role enum to new role_id
    # Get role IDs
    connection = op.get_bind()
    
    # Map old role values to new role names
    role_mapping = {
        'ADMIN': 'admin',
        'MODERATOR': 'moderator', 
        'USER': 'user'
    }
    
    # Update users with role_id based on their old role value
    for old_role, new_role_name in role_mapping.items():
        connection.execute(
            sa.text(f"""
                UPDATE users 
                SET role_id = (SELECT id FROM roles WHERE name = '{new_role_name}')
                WHERE role = '{old_role}'
            """)
        )
    
    # Step 3: Make role_id NOT NULL after data migration
    op.alter_column('users', 'role_id', nullable=False)
    
    # Step 4: Drop old role column
    op.drop_column('users', 'role')
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('role', postgresql.ENUM('ADMIN', 'MODERATOR', 'USER', name='userrole'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_index(op.f('ix_users_role_id'), table_name='users')
    op.drop_column('users', 'role_id')
    # ### end Alembic commands ###
